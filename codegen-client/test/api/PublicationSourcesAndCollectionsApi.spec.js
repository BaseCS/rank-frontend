/*
 * BaseCaSE API Draft
 * Preliminary OpenAPI documentation. Subject to change.
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BaseCaSeApiDraft);
  }
}(this, function(expect, BaseCaSeApiDraft) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BaseCaSeApiDraft.PublicationSourcesAndCollectionsApi();
  });

  describe('(package)', function() {
    describe('PublicationSourcesAndCollectionsApi', function() {
      describe('sourcesGet', function() {
        it('should call sourcesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for sourcesGet call and complete the assertions
          /*
          var opts = {};

          instance.sourcesGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse20012);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sourcesIdGet', function() {
        it('should call sourcesIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for sourcesIdGet call and complete the assertions
          /*

          instance.sourcesIdGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse20013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sourcesIdInstitutionsGet', function() {
        it('should call sourcesIdInstitutionsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for sourcesIdInstitutionsGet call and complete the assertions
          /*

          instance.sourcesIdInstitutionsGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2009);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sourcesIdPeopleGet', function() {
        it('should call sourcesIdPeopleGet successfully', function(done) {
          // TODO: uncomment, update parameter values for sourcesIdPeopleGet call and complete the assertions
          /*

          instance.sourcesIdPeopleGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2005);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('sourcesIdPublicationsGet', function() {
        it('should call sourcesIdPublicationsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for sourcesIdPublicationsGet call and complete the assertions
          /*

          instance.sourcesIdPublicationsGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
