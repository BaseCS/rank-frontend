/*
 * BaseCaSE API Draft
 * Preliminary OpenAPI documentation. Subject to change.
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BaseCaSeApiDraft);
  }
}(this, function(expect, BaseCaSeApiDraft) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BaseCaSeApiDraft.InstitutionsApi();
  });

  describe('(package)', function() {
    describe('InstitutionsApi', function() {
      describe('institutionsGet', function() {
        it('should call institutionsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsGet call and complete the assertions
          /*
          var opts = {};

          instance.institutionsGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdGet', function() {
        it('should call institutionsIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdGet call and complete the assertions
          /*

          instance.institutionsIdGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2001);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdPeopleGet', function() {
        it('should call institutionsIdPeopleGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdPeopleGet call and complete the assertions
          /*

          instance.institutionsIdPeopleGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2005);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdPublicationsCountGet', function() {
        it('should call institutionsIdPublicationsCountGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdPublicationsCountGet call and complete the assertions
          /*
          var opts = {};

          instance.institutionsIdPublicationsCountGet(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2003);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdPublicationsFilterGet', function() {
        it('should call institutionsIdPublicationsFilterGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdPublicationsFilterGet call and complete the assertions
          /*
          var opts = {};

          instance.institutionsIdPublicationsFilterGet(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdPublicationsGet', function() {
        it('should call institutionsIdPublicationsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdPublicationsGet call and complete the assertions
          /*

          instance.institutionsIdPublicationsGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('institutionsIdSourcesGet', function() {
        it('should call institutionsIdSourcesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for institutionsIdSourcesGet call and complete the assertions
          /*

          instance.institutionsIdSourcesGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(BaseCaSeApiDraft.InlineResponse2004);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
